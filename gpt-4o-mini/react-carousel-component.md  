fileName: React-Carousel-Component.md
# Building a React Carousel Component

This tutorial will guide you through creating a simple carousel component using React. 

## Step 1: Set up the Component Structure

<field label="componentName" description="Choose a name for your carousel component (e.g., 'MyCarousel')">MyCarousel</field>


```tsx
import React, { useState, useEffect } from 'react';
import './${componentName}.css';

interface Slide {
    image: string;
    title: string;
    description: string;
}

const ${componentName}: React.FC = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [slides, setSlides] = useState<Slide[]>([]);

  useEffect(() => {
    // Load your slide data here 
    // Example:
    setSlides([
        { image: 'image1.jpg', title: 'Slide 1', description: 'Slide 1 description' },
        { image: 'image2.jpg', title: 'Slide 2', description: 'Slide 2 description' },
        // ... more slides
    ]);
  }, []);

  const nextSlide = () => {
    setCurrentSlide((prevSlide) => (prevSlide + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prevSlide) => (prevSlide - 1 + slides.length) % slides.length);
  };

  return (
    <div className="carousel">
      <div className="carousel-container">
        {slides.map((slide, index) => (
          <div 
            key={index} 
            className={`carousel-slide ${index === currentSlide ? 'active' : ''}`}
            style={{ backgroundImage: `url(${slide.image})` }}
          >
            <div className="carousel-content">
              <h2>{slide.title}</h2>
              <p>{slide.description}</p>
            </div>
          </div>
        ))}
      </div>
      <button onClick={prevSlide} className="carousel-button prev">
        &#10094;
      </button>
      <button onClick={nextSlide} className="carousel-button next">
        &#10095;
      </button>
    </div>
  );
};

export default ${componentName};
```


## Step 2: Add Styling (CSS)

css
.carousel {
    position: relative;
    width: 500px;
    margin: 0 auto;
}

.carousel-container {
    display: flex;
    overflow: hidden;
}

.carousel-slide {
    width: 100%;
    height: 300px;
    position: relative;
    background-size: cover;
    background-position: center;
    transition: transform 0.5s ease;
}

.carousel-slide.active {
    transform: translateX(0);
}

.carousel-content {
    position: absolute;
    bottom: 20px;
    left: 20px;
    color: white;
    text-align: left;
}

.carousel-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 10px;
    border: none;
    cursor: pointer;
    z-index: 10;
}

.prev {
    left: 20px;
}

.next {
    right: 20px;
}


## Step 3: Integrate into your React Project

1. Import the ${componentName} component into your desired React component.
2. Pass your slide data to the component as props.

Example:

tsx
import ${componentName} from './${componentName}';

const MyComponent: React.FC = () => {
  return (
    <div>
      <${componentName} />
    </div>
  );
};

export default MyComponent;


<script>return `import ${componentName} from './${componentName}';

const MyComponent: React.FC = () => {
  return (
    <div>
      <${componentName} />
    </div>
  );
};

export default MyComponent;`</script>

## Step 4: Customize and Enhance

You can further customize the carousel:

- **Automatic sliding:** Add a timer to automatically switch slides.
- **Indicators:** Include dots or thumbnails to navigate between slides.
- **Responsive design:** Make the carousel responsive to different screen sizes.

This guide gives you a basic structure.  Feel free to modify and expand upon it to create your own unique carousel component. 
